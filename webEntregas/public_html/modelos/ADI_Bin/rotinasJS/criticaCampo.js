<!-- /ADI_Intranet_Root/ADI_Programacao/ADI_Bin/rotinasJS/criticaCampo.js -->/** * Função que critica determinado campo do formulário * @version 1.0 01/01/2000 * @author Alexandre * @param campo Campo a ser criticado * @param tipoDado Tipo de dado do campo * @param tamMin Tamanho mínimo que o campo deve ter * @param numDecimais Número de casas decimais que o campo deve ter * @return true se o campo for válido, false se for inválido * @see critOption * @see tiraCaracter * @see critSelecao * @see critTextoSelecao * @see criticaData * @see criticaNumerico */arrayCampos = new Array();arrayTitulos = new Array();function criticaCampo(campo, tipoDado, tamMin, numDecimais){// inicio da function criticaCampo(campo, tipoDado, tamMin, numDecimais)	objCampo = eval("document.forms[0]."+campo);	//verifica se o campo é um campo do tipo Option e faz a critica	//e chama rotina específica: critOption(objCampo)	if (tipoDado=="O")	{		if (!critOption(objCampo))		{			return false;		}		return true	}	objCampo.value = tiraCaracter(objCampo.value, ' ','T')	strName = objCampo.name;	//verifica se o campo é um campo do tipo caixa de combinacao	//e chama rotina específica: critSelecao(objCampo)	if (tipoDado=="S"||tipoDado=="M")	{		if (!critSelecao(objCampo, tipoDado))		{			return false;		}		return true	}	//verifica se o campo é um campo texto com consulta	//em outra tela e chama rotina específica: critTextoSelecao(objCampo)	if (strName.indexOf("hidCod")>-1)	{		if (!critTextoSelecao(objCampo))		{			return false;		}		return true	}	objCampo.focus();	if (tamMin>0)	{		strCampo = objCampo.value		if (strCampo.length==0)		{			if (!arrayTitulos[indCritAtual])			{				alert(GENBA0002 + arrayTitulos[indCritAtual]);				return false;			}		}		if (strCampo.length<tamMin)		{			alert(GENTN0000+ tamMin * 1);			return false;		}	}	//verifica se o campo é de data e chama rotina//específica de crítica: criticaData(objCampo.value)	if (tipoDado=="D"&&objCampo.value!="")	{		if (!criticaData(objCampo.value))		{			alert(GENDT0003);			return false;		}		vr = objCampo.value;		dataParaSQL = vr.substr( 3, 2 ) + '/' + vr.substr( 0, 2 ) + '/' + vr.substr( 6, 10 );		strNomeCampo = objCampo.name;		nomeCampoHidden = strNomeCampo.replace('txt','hid');		if (eval("document.forms[0]."+nomeCampoHidden))		{			eval("document.forms[0]."+nomeCampoHidden+".value='"+dataParaSQL+"'")		}		return true;	}	//verifica se o campo é de hora e	//chama rotina de critica específica: critHora(objCampo)	if (tipoDado == "H")	{		if (!critHora)		{			return false;		}		return true;	}	//verifica se o campo é numérico	//e faz a crítica específica: criticaNumerico(objCampo)	if (tipoDado=="N")	{		if (!criticaNumerico(objCampo))		{			return false;		}	}	return true;}// fim da function criticaCampo(campo, tipoDado, tamMin, numDecimais)