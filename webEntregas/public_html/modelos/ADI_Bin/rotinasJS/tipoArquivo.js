<!-- /ADI_Intranet_Root/ADI_Programacao/ADI_Bin/rotinasJS/tipoArquivo.js -->/** * Função para retornar apenas o tipo do arquivo (extensao) * @version 1.0 01/01/2000 * @author Alexandre * @param str Nome do arquivo (string) * @return String com a extensão do arquivo */ function tipoArquivo(str) {// início da função tipoArquivo  posicao = str.lastIndexOf(".");  if (posicao>=0)   {    return str.substring(posicao,str.length).toLowerCase();  } else {           return "";         }}// fim da função tipoArquivo //extensões de imagens.EXT_IMAGENS = new Array( '.gif', '.jpg', '.jpeg', '.bmp', '.png' );//extensões de rotinas do sistema.EXT_ROTINAS = new Array( '.js', '.xml', '.jsp', '.html', '.sql', '.zip', '.adi' );/** * Função que verfica se a extensão do arquivo é permitida. * @version 1.0 30.03.2004 * @author Diego R. Drumond * @param arrExtensoes Array contendo as extensões permitidas. Os valores devem ser precedidos de um '.'. * @param caminho Endereço do arquivo que está sendo enviado. * @return True - se a extensão do arquivo for válida. False - se a extensão do arquivo for inválida. */function verificaExtensao( arrExtensoes, caminho ){	ext = tipoArquivo( caminho );	for( i = 0; i < arrExtensoes.length; i++ )	{		if( ext == arrExtensoes[ i ] )			return true;	}	perm = "";	for( i = 0; i < arrExtensoes.length; i++ )		perm += arrExtensoes[ i ].replace( ".", " " ) + ",";	alert( GENIO0003.replace( "^%1%^", perm.substring( 0, perm.length - 1 ) ) );	return false;}